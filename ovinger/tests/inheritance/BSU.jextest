test inheritance.BSU

instance BSU bsu = new BSU(0.05, 25000.0)

sequence deposit {
	
	--
	bsu.deposit(10000.0)
	-->
	state {
		bsu.balance ?= 10000.0
	}
	--
	bsu.deposit(-10000.0)
	throws IllegalArgumentException
	-->
	state {
		bsu.balance ?= 10000.0
	}
	--
	bsu.deposit(20000.0)
	throws IllegalStateException
	-->
	state {
		bsu.balance ?= 10000.0
	}
	--
	bsu.endYearUpdate(), bsu.deposit(20000.0)
	-->
	state {
		bsu.balance ?= 10000.0 * (1 + 0.05) + 20000.0
	}
}

sequence withdraw {
	--
	bsu.deposit(20000.0), bsu.withdraw(5000.0)
	-->
	state {
		bsu.balance ?= 15000.0
	}
	--
	bsu.withdraw(-10000.0) throws IllegalArgumentException
	-->
	state {
		bsu.balance ?= 15000.0
	}
	--
	bsu.withdraw(20000.0) throws IllegalStateException
	-->
	state {
		bsu.balance ?= 15000.0
	}
	--
	bsu.endYearUpdate(), bsu.withdraw(10000.0) throws IllegalStateException
	-->
	state {
		bsu.balance ?= 15000.0 * (1 + 0.05)
	}
}

sequence getTaxDeduction {
	--
	bsu.deposit(20000.0)
	-->
	state {
		bsu.taxDeduction ?= 20000.0 * 0.20
	}
	--
	bsu.endYearUpdate, bsu.deposit(10000.0)
	-->
	state {
		bsu.taxDeduction ?= 10000.0 * 0.20
	}
	--
	bsu.endYearUpdate
	-->
	state {
		bsu.taxDeduction ?= 0.0
	}
}
